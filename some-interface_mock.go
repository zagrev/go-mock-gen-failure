// Code generated by MockGen. DO NOT EDIT.
// Source: some-interface.go

// Package main is a generated GoMock package.
package main

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSome is a mock of Some interface
type MockSome struct {
	ctrl     *gomock.Controller
	recorder *MockSomeMockRecorder
}

// MockSomeMockRecorder is the mock recorder for MockSome
type MockSomeMockRecorder struct {
	mock *MockSome
}

// NewMockSome creates a new mock instance
func NewMockSome(ctrl *gomock.Controller) *MockSome {
	mock := &MockSome{ctrl: ctrl}
	mock.recorder = &MockSomeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSome) EXPECT() *MockSomeMockRecorder {
	return m.recorder
}

// Method mocks base method
func (m *MockSome) Method(argument string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Method", argument)
	ret0, _ := ret[0].(string)
	return ret0
}

// Method indicates an expected call of Method
func (mr *MockSomeMockRecorder) Method(argument interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Method", reflect.TypeOf((*MockSome)(nil).Method), argument)
}
